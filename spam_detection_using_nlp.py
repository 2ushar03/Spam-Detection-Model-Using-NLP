# -*- coding: utf-8 -*-
"""Spam Detection_Using_NLP

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1xG0eAJZHAkLDrl18T_y4OmcrY8OwHyNq
"""

import pandas as pd
import numpy as np
import nltk
from nltk.corpus import stopwords
import string

df=pd.read_csv("spammails.csv")
df.head()

df['Category'] = df['Category'].apply(lambda x: 1 if x == 'spam' else 0)

df.shape

df.columns

df.drop_duplicates(inplace=True)

print(df.shape)

nltk.download("stopwords")

print(df.isnull().sum())

def check(text):
    x=[ch for ch in text if ch not in string.punctuation]
    x=''.join(x)
    cleandata=[word for word in x.split() if word.lower() not in stopwords.words('english')]
    return cleandata
df['Masseges'].head().apply(check)

from sklearn.feature_extraction.text import CountVectorizer
msg=CountVectorizer(analyzer=check).fit_transform(df['Masseges'])

from sklearn.model_selection import train_test_split
x_train,x_test,y_train,y_test=train_test_split(msg,df['Category'],test_size=0.2,random_state=0)
print(msg.shape)

from sklearn.naive_bayes import MultinomialNB
classifier=MultinomialNB().fit(x_train,y_train)

print(classifier.predict(x_train))

print(y_train.values)

from sklearn.metrics import confusion_matrix,accuracy_score,classification_report
pred=classifier.predict(x_train)
cm=confusion_matrix
print(classification_report(y_train,pred))

print("Confusion Matrix is \n",cm(y_train,pred))

print("Accuracy is \n",accuracy_score(y_train,pred))

print(classifier.predict(x_test))
print(y_test.values)

"""Result"""

from sklearn.metrics import confusion_matrix,accuracy_score,classification_report
pred=classifier.predict(x_test)
cm=confusion_matrix
print(classification_report(y_test,pred))

print("Confusion Matrix is \n",cm(y_test,pred))

print("Accuracy is \n",accuracy_score(y_test,pred))